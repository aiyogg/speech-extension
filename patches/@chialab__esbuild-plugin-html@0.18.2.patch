diff --git a/dist/index.js b/dist/index.js
index bbb97206015dae4ea9e71bc14ed7899933a207e9..57e5a4d2d89ca36e912cff2b676267f5d12f502b 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -5002,6 +5002,7 @@ async function innerCollect($2, dom, elements, target, format, type, attrs = {},
     }
   });
   if (styleFiles.length) {
+    if (options.injectStylesAs === 'script') {
     const script = $2("<script>");
     for (const attrName in attrs) {
       $2(script).attr(attrName, attrs[attrName]);
@@ -5022,7 +5023,17 @@ ${styleFiles.map((outName) => {
     }).join("\n")}
 }());`);
     dom.find("head").append(script);
+  } else {
+    styleFiles.forEach((outName) => {
+        const fullOutFile = path2.join(options.workingDir, outName);
+        const outputPath = helpers.resolveRelativePath(fullOutFile, options.entryDir, '');
+        const link = $2('<link>');
+        $2(link).attr('rel', 'stylesheet');
+        $2(link).attr('href', outputPath);
+        dom.find('head').append(link);
+    });
   }
+}
   return [result];
 }
 async function collectScripts($2, dom, options, helpers) {
@@ -34168,7 +34179,7 @@ var loadHtml = (
   /** @type {typeof cheerio.load} */
   load || esm_default2?.load
 );
-function lib_default({ scriptsTarget = "es2015", modulesTarget = "es2020", minifyOptions = {} } = {}) {
+function lib_default({ scriptsTarget = "es2015", modulesTarget = "es2020", minifyOptions = {}, injectStylesAs = 'script' } = {}) {
   const plugin = {
     name: "html",
     setup(pluginBuild) {
@@ -34311,7 +34322,7 @@ function lib_default({ scriptsTarget = "es2015", modulesTarget = "es2020", minif
         results.push(...await collectIcons2($2, root3, collectOptions, helpers));
         results.push(...await collectAssets2($2, root3, collectOptions, helpers));
         results.push(...await collectStyles2($2, root3, collectOptions, helpers));
-        results.push(...await collectScripts2($2, root3, collectOptions, helpers));
+        results.push(...await collectScripts2($2, root3, {...collectOptions, injectStylesAs}, helpers));
         let resultHtml = $2.html().replace(/\n\s*$/gm, "");
         if (minify) {
           await import("htmlnano").then(async ({ default: htmlnano }) => {
diff --git a/types/index.d.ts b/types/index.d.ts
index e728a25ff2203cbacc57ccb56d5e936a4c188891..c387116883877b24b4adf1574f455ecd7958460e 100644
--- a/types/index.d.ts
+++ b/types/index.d.ts
@@ -35,7 +35,7 @@
  * @param {PluginOptions} options
  * @returns An esbuild plugin.
  */
-export default function _default({ scriptsTarget, modulesTarget, minifyOptions }?: PluginOptions): import("esbuild").Plugin;
+export default function _default({ scriptsTarget, modulesTarget, minifyOptions, injectStylesAs }?: PluginOptions): import("esbuild").Plugin;
 export type PluginOptions = {
     scriptsTarget?: string | undefined;
     modulesTarget?: string | string[] | undefined;
@@ -43,6 +43,7 @@ export type PluginOptions = {
     chunkNames?: string | undefined;
     assetNames?: string | undefined;
     minifyOptions?: import("htmlnano").HtmlnanoOptions | undefined;
+    injectStylesAs?: 'script' | 'link' | undefined;
 };
 export type BuildOptions = {
     sourceDir: string;
